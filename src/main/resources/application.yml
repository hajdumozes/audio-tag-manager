server:
  port: ${APP_PORT}
spring:
  cloud.stream:
    function:
      definition:
        "consumeAudioTagCreated;\
        consumeSpotifyTracks;\
        consumeTracksLiked;\
        consumePlaylistCreated;\
        consumePlaylistDeleted;\
        consumePlaylistItemAdded;\
        produceAudioTagProcessed"
      bindings:
        consumeAudioTagCreated-in-0: audio-tag-created
        consumeSpotifyTracks-in-0: spotify-track
        consumeTracksLiked-in-0: liked-tracks
        consumePlaylistCreated-in-0: playlist-created
        consumePlaylistDeleted-in-0: playlist-deleted
        consumePlaylistItemAdded-in-0: playlist-item-added
        produceAudioTagProcessed-out-0: audio-tag-processed
    bindings:
      audio-tag:
        destination: ${KAFKA_AUDIO_TAG_CREATED_TOPIC:audio-tag-created}
      spotify-track:
        destination: ${KAFKA_SPOTIFY_TRACK_TOPIC:spotify-track-created}
      liked-tracks:
        destination: ${KAFKA_TRACK_LIKED_TOPIC:track-liked}
      playlist-created:
        destination: ${KAFKA_PLAYLIST_CREATED_TOPIC:playlist-created}
      playlist-deleted:
        destination: ${KAFKA_PLAYLIST_DELETED_TOPIC:playlist-deleted}
      playlist-item-added:
        destination: ${KAFKA_PLAYLIST_ITEM_ADDED_TOPIC:playlist-item-added}
      audio-tag-processed:
        destination: ${KAFKA_AUDIO_TAG_PROCESSED:audio-tag-processed}
    default-binder: kafka
    kafka:
      binder:
        brokers: ${KAFKA_SERVER:localhost:9093}
  datasource:
    username: ${DATASOURCE_USERNAME:mozeshajdu}
    password: ${DATASOURCE_PASSWORD:mozeshajdu}
    url: ${DATASOURCE_URL:jdbc:postgresql://localhost:5432/audiotag}
  jpa:
    hibernate.ddl-auto: ${HIBERNATE_DDL_AUTO:update}
    show-sql: ${SHOW_SQL:false}
    generate-ddl: true
    database-platform: org.hibernate.dialect.PostgreSQLDialect